{"version":3,"sources":["Component/input.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","inputData","setInputData","Items","setItems","className","type","placeholder","id","value","onChange","e","target","onClick","map","elem","ind","editing","filter","item","edit","updatedItems","deleteItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAwFeA,EAnFF,WACT,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA2BF,mBAAS,IAApC,mBAAOG,EAAP,KAAeC,EAAf,KA0CA,OACI,mCACG,qBAAKC,UAAY,WAAjB,SACI,sBAAKA,UAAY,YAAjB,UACI,4DACA,sBAAKA,UAAY,WAAjB,UACI,uBAAOC,KAAO,OAAOC,YAAc,iBAAiBC,GAAK,QAAQC,MAASR,EAAWS,SAAY,SAACC,GAAD,OAAMT,EAAaS,EAAEC,OAAOH,UAG7H,cAAC,IAAD,CAAcJ,UAAY,SAASQ,QAlDtC,WACRZ,IAGAG,EAAS,GAAD,mBAAMD,GAAN,CAAaF,KACzBC,EAAa,WAgDF,qBAAKG,UAAY,WAAjB,SAEQF,EAAMW,KAAI,SAACC,EAAKC,GACZ,OACC,sBAAKX,UAAY,WAAjB,UAEA,oBAAIA,UAAY,OAAhB,SAAwBU,IACxB,sBAAKV,UAAY,OAAjB,UACA,cAAC,IAAD,CAASA,UAAY,OAAOQ,QAAW,kBArCtD,SAACL,GACV,IAAMS,EAAUd,EAAMe,QAAO,SAACH,EAAMC,GACpC,OAAQA,IAAQR,KAGpBN,EAAae,GAET,IAAIE,EAAOhB,EAAMe,QAAO,SAACH,EAAMC,GAC/B,OAAOA,IAAQR,KAEnBJ,EAASe,GA2B8DC,CAAKJ,MAChD,cAAC,IAAD,CAASX,UAAY,QAAQQ,QAAW,kBAlDjD,SAACL,GAChB,IAAIa,EAAelB,EAAMe,QAAO,SAACH,EAAMC,GACvC,OAAOA,IAAQR,KAEnBJ,EAASiB,GA8C+DC,CAAWN,WALtBA,QAa9C,qBAAKX,UAAY,QAAjB,SACI,wBAAQA,UAAY,MAAMQ,QAnD3B,WACdT,EAAS,KAkDM,iCChERmB,MAXf,WACE,OACE,mCACA,cAAC,EAAD,OCKWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6961b6f0.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { FaPlusCircle} from \"react-icons/fa\";\r\nimport { CgTrash } from \"react-icons/cg\";\r\nimport { VscEdit } from \"react-icons/vsc\";\r\nimport './input.css';\r\nconst Todo = () => {\r\n    const [inputData, setInputData] = useState(\"\");\r\n    const [Items , setItems] = useState([]);\r\n    const addItem = ()=>{\r\n        if(!inputData){\r\n\r\n        }else{\r\n            setItems([... Items, inputData]);\r\n        setInputData(\"\");\r\n\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    const deleteItem = (id)=>{\r\n        var updatedItems = Items.filter((elem, ind)=>{\r\n        return ind !== id;\r\n    });\r\n    setItems(updatedItems);\r\n\r\n    }\r\n\r\n    const removeall = ()=>{\r\n        setItems([]);\r\n    }\r\n\r\n    const edit = (id)=>{\r\n        const editing = Items.filter((elem, ind)=>{\r\n        return (ind === id);\r\n    });\r\n    \r\n    setInputData(editing);\r\n\r\n        var item = Items.filter((elem, ind)=>{\r\n        return ind !== id;\r\n    });\r\n    setItems(item);\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n           <div className = \"main_div\">\r\n               <div className = \"child_div\">\r\n                   <figcaption>Add Your List Here</figcaption>\r\n                   <div className = \"add-item\">\r\n                       <input type = \"text\" placeholder = \"Aad Items Here\" id = \"input\" value = {inputData} onChange = {(e)=> setInputData(e.target.value)  } />\r\n\r\n                       \r\n                       <FaPlusCircle className = \"circle\" onClick = {addItem} />\r\n\r\n                   </div>\r\n                   <div className = \"showitem\">\r\n                       {\r\n                           Items.map((elem,ind)=>{\r\n                               return(\r\n                                <div className = \"eachitem\" key={ind}>\r\n                                \r\n                                <h3 className = \"text\">{elem}</h3>\r\n                                <div className = \"icon\">\r\n                                <VscEdit className = \"edit\" onClick = {()=>edit(ind)} />\r\n                                <CgTrash className = \"trash\" onClick = {()=>deleteItem(ind)} />\r\n                                </div>\r\n                            </div>\r\n                               )\r\n                           })\r\n                       }\r\n                       \r\n                   </div>\r\n                   <div className = \"clear\">\r\n                       <button className = \"btn\" onClick = {removeall}>Clear All</button>\r\n                   </div>\r\n\r\n                   </div>\r\n                   </div> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\nimport Input from './Component/input';\n\n\nfunction App() {\n  return (\n    <>\n    <Input />\n    \n    </>\n\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}